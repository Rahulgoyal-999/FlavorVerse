"""
Django settings for FlavorverseProject project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o1hw*idnk-7cgz0c3ggtkqods5g)l3w3w3mnq3es467vda4(xl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition


# settings.py


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'FlavorverseApp',
    'RegistrationApp',
    'RecipesApp',
    'social_django',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

# JWT settings

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,  # Uses your Django SECRET_KEY
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Required for admin
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'FlavorverseApp.middleware.APIDetectionMiddleware',  # Our custom API detection middleware
    'FlavorverseApp.middleware.FlaskAPICheckMiddleware',  # Check if Flask API is available
]

ROOT_URLCONF = 'FlavorverseProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'FlavorverseProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Custom authentication backend that always returns None for login
AUTHENTICATION_BACKENDS = [
    'RegistrationApp.backends.FlaskAPIAuthBackend',  # Try Flask API first
    'RegistrationApp.backends.EmailAuthBackend',  # Then try email authentication
    'django.contrib.auth.backends.ModelBackend',  # Keep for admin functionality
]

# Keep these URLs but they'll be overridden by our views
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = 'homepage'
LOGOUT_REDIRECT_URL = '/login/'

AUTH_USER_MODEL = 'RegistrationApp.RegisterUser'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'FlavorverseApp/static')
]

# Media files (Uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Facebook OAuth
SOCIAL_AUTH_FACEBOOK_KEY = 'YOUR_APP_ID'  # Replace with your Facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = 'YOUR_APP_SECRET'  # Replace with your Facebook App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', 'public_profile']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email, picture'
}
SOCIAL_AUTH_FACEBOOK_API_VERSION = '18.0'

# Google OAuth - DO NOT USE THESE IN PRODUCTION - PLACEHOLDERS ONLY
# Replace with your actual credentials from Google Cloud Console
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get('GOOGLE_OAUTH2_KEY', '999999999999-xxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get('GOOGLE_OAUTH2_SECRET', 'xxxx-xxxxxxxxxxxxxxxxxxxxxxxx')
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['email', 'profile']

# LinkedIn OAuth
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = 'YOUR_LINKEDIN_CLIENT_ID'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'YOUR_LINKEDIN_CLIENT_SECRET'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_liteprofile', 'r_emailaddress']
SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['emailAddress']

# GitHub OAuth
SOCIAL_AUTH_GITHUB_KEY = 'YOUR_GITHUB_CLIENT_ID'
SOCIAL_AUTH_GITHUB_SECRET = 'YOUR_GITHUB_CLIENT_SECRET'
SOCIAL_AUTH_GITHUB_SCOPE = ['user:email']

# Microsoft OAuth
SOCIAL_AUTH_MICROSOFT_GRAPH_KEY = 'YOUR_MICROSOFT_CLIENT_ID'
SOCIAL_AUTH_MICROSOFT_GRAPH_SECRET = 'YOUR_MICROSOFT_CLIENT_SECRET'
SOCIAL_AUTH_MICROSOFT_GRAPH_SCOPE = ['User.Read']

# Social auth pipeline to handle user creation
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'RegistrationApp.pipeline.social_user_creation',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
    'RegistrationApp.pipeline.update_user_details',
    'RegistrationApp.pipeline.get_avatar',
)

# Social auth settings
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/Register/social-login-complete/'
SOCIAL_AUTH_LOGIN_ERROR_URL = '/login/'
SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/Register/social-login-complete/'
SOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/Register/social-login-complete/'

# Add local development OAuth redirect URIs
SOCIAL_AUTH_REDIRECT_IS_HTTPS = False  # Set to True in production

# Google OAuth redirect whitelist (development)
SOCIAL_AUTH_ALLOWED_REDIRECT_URIS = [
    'http://localhost:8000/social-auth/complete/google-oauth2/',
    'http://127.0.0.1:8000/social-auth/complete/google-oauth2/',
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # or your SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'flavorverse038@gmail.com'
EMAIL_HOST_PASSWORD = 'csuo rfrb majh pqdi'
DEFAULT_FROM_EMAIL = 'FlavorVerse <flavorverse038@gmail.com>'


# # Add Facebook redirect URIs to allowed redirects
# SOCIAL_AUTH_ALLOWED_REDIRECT_URIS.extend([
#     'http://localhost:8000/social-auth/complete/facebook/',
#     'http://127.0.0.1:8000/social-auth/complete/facebook/',
# ])


# AZURE_TRANSLATOR_KEY = '2FV2tI3WFiH1YPGhAv2UUlFv8mFFrIcoe0hfREawhIwtthvgohX9JQQJ99BDACGhslBXJ3w3AAAbACOGgPbz'
# AZURE_TRANSLATOR_ENDPOINT = 'EY7zQkodWDeUIR3uYMaVdZV48ieYDQlisszKLC8wYOiBwY0LVt9vJQQJ99BDACGhslBXJ3w3AAAbACOGTHQW'
# AZURE_TRANSLATOR_LOCATION = 'centralindia'  # e.g., 'eastus'

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # Only for development
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5000",  # Flask development server
    "http://127.0.0.1:5000",
]

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_NAME = 'flavorverse_session'
SESSION_COOKIE_AGE = 86400  # 24 hours in seconds
SESSION_COOKIE_DOMAIN = None
SESSION_COOKIE_SECURE = False  # Set to True in production
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_SAVE_EVERY_REQUEST = True

